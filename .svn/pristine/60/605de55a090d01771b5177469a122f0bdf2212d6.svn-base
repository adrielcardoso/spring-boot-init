package br.intelidata.component;

import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.List;
import javax.sql.DataSource;
import br.intelidata.entity.AbstractEntity;

public class AbstractDataSourceComponent<E extends AbstractEntity> 
{
    private DBUtilComponent dbUtil;
    private Class<?> classe;

    public AbstractDataSourceComponent() 
    {
        dbUtil = new DBUtilComponent();
    }

    public Class<?> getClasse() 
    {
        if (classe == null) {
            Type tp = getClass().getGenericSuperclass();
            if (tp instanceof ParameterizedType) {
                classe = (Class<?>) ((ParameterizedType) tp).getActualTypeArguments()[0];
            }
        }
        return classe;
    }

    public void incluir(DataSource dataSource, E pojo) throws Exception 
    {
        dbUtil.incluirObjeto(dataSource, pojo);
    }

    public E buscarPor(DataSource dataSource, String where) 
    {
        return dbUtil.buscar(dataSource, getClasse(), where);
    }

    public List<E> buscarListaDetail(DataSource dataSource, String where) 
    {
        return dbUtil.buscarLista(dataSource, getClasse(), where);
    }

}
